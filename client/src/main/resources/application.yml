# local
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          my-registration:
            provider: my-provider
            client-id: client_id_1
            client-secret: client_secret_1
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          my-provider:
            authorization-uri: http://localhost:8080/auth/auth/oauth2/authorization
            token-uri: http://localhost:8080/auth/oauth2/token
            jwk-set-uri: http://localhost:8080/auth/.well-known/jwks.json
            issuer-uri: http://localhost:8080/auth
            user-info-uri: http://localhost:8080/auth/oauth2/userinfo
            user-name-attribute: sub

server:
  port: 8011

---
# dev
spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      client:
        registration:
          my-registration:
            provider: my-provider
            client-id: client_id_1
            client-secret: client_secret_1
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          my-provider:
            authorization-uri: ${AUTH_ISSUER_URI}/oauth2/authorization
            token-uri: ${AUTH_ISSUER_URI}/oauth2/token
            jwk-set-uri: ${AUTH_ISSUER_URI}/.well-known/jwks.json
            issuer-uri: ${AUTH_ISSUER_URI}
            user-info-uri: ${AUTH_ISSUER_URI}/oauth2/userinfo
            user-name-attribute: sub

server:
  port: ${CLIENT_PORT}

---
# common
spring:
  application:
    name: client
