# local
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/auth/.well-known/jwks.json
          issuer-uri: http://localhost:8080/auth
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/my_db?serverTimezone=Asia/Seoul
    username: postgres
    password: 1234
    properties:
      schema: my_schema
  data:
    redis:
      host: localhost
      port: 6379
      database: 0

server:
  port: 9000

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/

---
# dev
spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${AUTH_ISSUER_URI}/.well-known/jwks.json
          issuer-uri: ${AUTH_ISSUER_URI}
  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?serverTimezone=Asia/Seoul
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    properties:
      schema: ${POSTGRES_SCHEMA}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      database: 0

server:
  port: ${AUTH_PORT}

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${DISCOVERY_BASE_URL}/eureka/

---
# common
spring:
  application:
    name: auth
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: messages
  r2dbc:
    pool:
      initial-size: 5
      max-size: 10
      max-idle-time: 60000
      max-lifetime: 180000
      max-create-connection-time: 2s

server:
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true

logging:
  level:
    root: debug
