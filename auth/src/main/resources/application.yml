# common
spring:
  application:
    name: auth
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: messages
  r2dbc:
    pool:
      initial-size: 5
      max-size: 10
      max-idle-time: 60000
      max-lifetime: 180000
      max-create-connection-time: 2s
server:
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true

logging:
  level:
    root: debug

---
# local
server:
  port: 9000
eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: "http://${eureka.instance.hostname}:8761/eureka"
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:9000/.well-known/jwks.json"
          issuer-uri: "http://localhost:9000"
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/my_db?serverTimezone=Asia/Seoul
    username: postgres
    password: 1234
    properties:
      schema: my_schema
  data:
    redis:
      host: localhost
      port: 6379
      database: 0

# JWT 설정
jwt:
  # JWT Secret Key 설정 (안전한 값으로 변경 필요)
  secret: [ JWT_SECRET_KEY ]
  # Access Token 만료 시간 (초 단위)
  access-token-validity-seconds: 3600
  # Refresh Token 만료 시간 (초 단위)
  refresh-token-validity-seconds: 2592000

---
# dev
server:
  port: ${SERVICE_AUTH_PORT}
eureka:
  instance:
    hostname: ${DISCOVERY_HOST}
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${DISCOVERY_PORT}/eureka
spring:
  config:
    activate:
      on-profile: dev
  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?serverTimezone=Asia/Seoul
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    properties:
      schema: ${POSTGRES_SCHEMA}
